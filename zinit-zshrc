declare -A ZINIT  # initial Zinit's hash definition, if configuring before loading Zinit, and then:

ZINIT[HOME_DIR]="$HOME/.config/zinit"
ZINIT[BIN_DIR]="${ZINIT[HOME_DIR]}/bin"

# Ask to download zinit if NOT installed.
if [ ! -d "${ZINIT[BIN_DIR]}" ]; then
    printf "Zinit not installed, clone to ${ZINIT[BIN_DIR]}? [y/N]: " 
    read installp
    if [ "$installp" = "y" ]; then
        git clone --depth=1 "https://github.com/zdharma/zinit.git" "${ZINIT[BIN_DIR]}"
    fi
fi

source "${ZINIT[BIN_DIR]}/zinit.zsh"

zinit ice pick'async.zsh' src'pure.zsh'
zinit load sindresorhus/pure

# 快速目录跳转
zinit ice lucid wait='1'
zinit light skywind3000/z.lua

# 语法高亮
zinit ice lucid wait='0' atinit='zpcompinit'
zinit light zdharma/fast-syntax-highlighting

# 自动建议
zinit ice lucid wait="0" atload='_zsh_autosuggest_start'
zinit light zsh-users/zsh-autosuggestions

# 补全
zinit ice lucid wait='0'
zinit light zsh-users/zsh-completions

############################################################
#                        => OMZ <=                         #
############################################################

# 加载 OMZ 框架及部分插件
zinit snippet OMZ::lib/completion.zsh
zinit snippet OMZ::lib/history.zsh
zinit snippet OMZ::lib/key-bindings.zsh
zinit snippet OMZ::lib/theme-and-appearance.zsh
zinit snippet OMZ::plugins/colored-man-pages/colored-man-pages.plugin.zsh
zinit snippet OMZ::plugins/sudo/sudo.plugin.zsh

############################################################
#                       => binary <=                       #
############################################################

# Config for fzf

# Set fzf installation directory path
export FZF_BASE=/usr/local/opt/fzf/install

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Set fzf interactive interface
export FZF_DEFAULT_OPTS="--height 40% --layout=reverse \
    --preview '(highlight -O ansi {} || cat {}) 2> /dev/null | head -500' \
    --bind 'ctrl-n:down,ctrl-p:up,ctrl-j:preview-down,ctrl-k:preview-up'"

# Set default fzf command style
# Use fd instead of ripgrep
# @see https://www.reddit.com/r/linux4noobs/comments/egb644/fzf_newcomer_fd_or_ripgrep/
export FZF_DEFAULT_COMMAND="fd --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build} --hidden --type file"
# Search files cwd
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
# Search directory from HOME
export FZF_ALT_C_COMMAND="fd -t d . $HOME"

############################################################
#                  => personal config <=                   #
############################################################

export TERM=screen-256color

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
# Example aliases
alias zshconfig="nvim ~/.zshrc"
alias tmuxconfig="nvim ~/.tmux.conf.local"
alias ytdlconfig="nvim ~/.config/youtube-dl/config"

alias g='git'
alias vi='vim'
alias nvi='nvim'
alias pc='proxychains4'
alias sicp="mit-scheme"
alias markdown='/Applications/Typora.app/Contents/MacOS/Typora'
alias firefox='/Applications/Firefox.app/Contents/MacOS/firefox'
alias chrome='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome'

alias screen="/usr/local/bin/screen"
alias dscreen="/usr/bin/screen"

# 用 vim 编辑命令行 `C-o'
autoload -U  edit-command-line
zle -N       edit-command-line
bindkey '^o' edit-command-line

# proxy
alias socks5_proxy="export all_proxy=socks5://127.0.0.1:1080; export http_proxy=socks5://127.0.0.1:1080; export https_proxy=socks5://127.0.0.1:1080"
alias http_proxy="export all_proxy=http://127.0.0.1:1087; export http_proxy=http://127.0.0.1:1087; export https_proxy=http://127.0.0.1:1087"
alias clean_proxy="export all_proxy=; export http_proxy=; export https_proxy="

# @see http://stackoverflow.com/questions/3746/whats-in-your-bashrc
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."

alias md='mkdir -p'
alias rd=rmdir

# List directory contents
alias l='ls -lah'
alias ll='ls -lh'
alias la='ls -lAh'

############################################################
#                      => export <=                        #
############################################################

export PATH="/usr/local/sbin:$PATH"
export PATH="/usr/local/lib/ruby/gems/2.7.0/bin:$PATH"
export PATH="/usr/local/opt/ruby/bin:$PATH"
export PATH="/usr/local/opt/curl/bin:$PATH"
export PATH="/usr/local/opt/sqlite/bin:$PATH"
export PATH="/usr/local/opt/sphinx-doc/bin:$PATH"
export PATH="/usr/local/opt/openssl@1.1/bin:$PATH"
export PATH="/usr/local/opt/texinfo/bin:$PATH"
export PATH="/usr/local/opt/gettext/bin:$PATH"
export PATH="/usr/local/opt/icu4c/bin:$PATH"
export PATH="/usr/local/opt/icu4c/sbin:$PATH"
export PATH="/usr/local/opt/llvm/bin:$PATH"

# GO
export GOPATH=$HOME/go
export PATH="$GOPATH/bin:$PATH"

# Python
export PATH="$HOME/Library/Python/3.7/bin:$PATH"
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi

# Ruby
export RBENV_ROOT="$HOME/.rbenv"
export PATH="$RBENV_ROOT/bin:$PATH"
export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"

if command -v rbenv 1>/dev/null 2>&1; then
    eval "$(rbenv init -)"
fi

# HOMEBREW
# 关闭 homebrew 自动更新
export HOMEBREW_NO_AUTO_UPDATE=true
export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles"
