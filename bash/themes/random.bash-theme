# Make themes a unique array
typeset -Ua themes

if [[ "${(t)BASH_THEME_RANDOM_CANDIDATES}" = array && ${#BASH_THEME_RANDOM_CANDIDATES[@]} -gt 0 ]]; then
    # Use BASH_THEME_RANDOM_CANDIDATES if properly defined
    themes=(${(@)BASH_THEME_RANDOM_CANDIDATES:#random})
else
    # Look for themes under $BASH/themes
    themes=(
        "$BASH"/themes/*.bash-theme(N:t:r)
    )
    # Remove blacklisted themes from the list
    for theme in random ${BASH_THEME_RANDOM_BLACKLIST[@]}; do
        themes=("${(@)themes:#$theme}")
    done
fi

# Choose a theme out of the pool of candidates
N=${#themes[@]}
(( N = (RANDOM%N) + 1 ))
RANDOM_THEME="${themes[$N]}"
unset N themes theme

# Source theme
if [[ -f "$BASH/$RANDOM_THEME.bash-theme" ]]; then
    source "$BASH/$RANDOM_THEME.bash-theme"
elif [[ -f "$BASH/themes/$RANDOM_THEME.bash-theme" ]]; then
    source "$BASH/themes/$RANDOM_THEME.bash-theme"
elif [[ -f "$BASH/themes/$RANDOM_THEME.bash-theme" ]]; then
    source "$BASH/themes/$RANDOM_THEME.bash-theme"
else
    echo "[bash] Random theme '${RANDOM_THEME}' not found"
    return 1
fi

echo "[bash] Random theme '${RANDOM_THEME}' loaded"
